# Introduction

Our first goal should be to familiarize ourselves with the data set.

## European Social Survey 9 

You will be analysing data from the [European Social Survey 9](https://ess-search.nsd.no/en/study/bdc7c350-1029-4cb3-9d5e-53f668b8fa74) from 2018, a european wide representative survey. The European Social Survey (ESS) is a multi-country survey conducted in over 38 countries with the aims of monitoring and interpreting changing public attitudes and values within Europe, advancing cross-national survey measurement methods, and developing European social indicators. The survey employs rigorous methodologies, including strict random probability sampling, a minimum target response rate of 70%, and rigorous translation protocols. In the ninth round, the survey covers 29 countries and is funded by ESS European Research Infrastructure Consortium (ESS ERIC) members, observers, and guests. The hour-long face-to-face interview includes questions on core topics and two modules developed for Round 9 covering Justice and Fairness in Europe, and the Timing of Life.

::: {.callout-note}
We explicitly use the ESS9 for this course, since all countries are recorded and analyzable in this data set, and there is no restricted data collection due to COVID-19.
:::

```{r, include=F}
library(tidyverse)
library(sjmisc)
library(sjlabelled)
library(lme4)

# maps
library(highcharter)
library(httr)

ess9 <- read_spss("ESS9e03_1/ESS9e03_1.sav", convert.factors = F, drop.labels = T)
```

```{r, echo=F}
europe <- "https://code.highcharts.com/mapdata/custom/europe.geo.json" %>% 
  GET() %>% 
  content() 

europe_data <- ess9 %>% 
  group_by(cntry) %>% 
  summarise(n_country = n(),
            age_min = min(agea, na.rm = T),
            age_max = max(agea, na.rm = T),
            age_range = paste0(age_min," to ",age_max)) %>% 
  rename(`hc-a2` = cntry) %>% 
  mutate(response = c(50.8, 57.6, 69.4, 51.8, 53.4, 67.4, 27.6, 48.8, 62.7, 53.8, 
                      51.8, 48.1, 41.0, 43.2, 40.7, 62.0, 40.5, 51.9, 59.2, 38.9, 
                      62.3, 49.6, 43.3, 60.4, 34.9, 57.9, 39.0, 64.1, 39.6),
         method = rep("CAPI/CAMI", 29),
         label = get_labels(ess9$cntry) %>% rec(rec = "Israel=Iceland; else=copy")
         )

highchart(type = "map") %>% 
  hc_title(text = "European Social Survey 9") %>%
  hc_subtitle(text = "Overview") %>%
  hc_add_series_map(map = europe, 
                    df = europe_data, 
                    joinBy = c("hc-a2"), 
                    value = "n_country",
                    response = "response",
                    method = "method",
                    age_range = "age_range",
                    dataLabels = list(enabled = FALSE,format = "{point.properties.hc-a2}")
  ) %>%
  hc_colorAxis(stops = color_stops()) %>%
  hc_tooltip(
    useHTML = TRUE,                             
    formatter = JS(
      "
      function(){
        outHTML = 
        '<b>' + this.point.name + '</b>' + '<br> ' + 
        <!-- '<u>' + 'Information about the survey' + '</u>' + '<br>' + --> 
        'Sample size = ' + this.point.value + '<br>' + 
        'Response rate = ' + this.point.response + '%' + '<br>' + 
        'Mode of collection = ' + this.point.method + '<br>';
        <!-- '<u>' + 'Demographics' + '</u>' + '<br>' + --> 
        <!-- 'Range of age = ' + this.point.age_range + ' years old'; --> 
        return(outHTML)
      }
      "
    )) %>%
  hc_mapNavigation(enabled = TRUE)

```


## Dependent variable

The aim of our analysis is to compare political identity in Europe and thus to explain existing differences. For this we use the variable atcherp, with the following question: "And how emotionally attached do you feel to Europe?". This is a metric variable going from 1 left to 10 right. First we want to approach the variable descriptively for every country:


```{r, echo=F, fig.height = 1.5, out.width="50%"}
x <- unique(ess9$cntry) %>% 
  map( ~ hchart(
    density(filter(ess9, cntry == .x)[,c("atcherp")], na.rm = T),
    type = "area",
    name = get_labels(filter(europe_data, `hc-a2` == .x)$label, drop.unused = T),
    color = color_stops(n = 29)[[match(.x, unique(ess9$cntry))]][[2]]
    )
  ) 

```

:::: {style="display: grid; grid-template-columns: 1fr 1fr; grid-column-gap: 10px; "}

::: {}

<left>


```{r, echo=F, fig.height = 1.5, out.width="100%"}
x[[1]]
x[[2]]
x[[3]]
x[[4]]
x[[5]]
x[[6]]
x[[7]]
x[[8]]
x[[9]]
x[[10]]
x[[11]]
x[[12]]
x[[13]]
x[[14]]
x[[15]]
```

</left>

:::

::: {}

<right>


```{r, echo=F, fig.height = 1.5, out.width="100%"}
x[[16]]
x[[17]]
x[[18]]
x[[19]]
x[[20]]
x[[21]]
x[[22]]
x[[23]]
x[[24]]
x[[25]]
x[[26]]
x[[27]]
x[[28]]
x[[29]]
```

</right>

:::

::::
